{"version":3,"sources":["Schemas/NavCardSchema.jsx","api/api.js","OAuth/GoogleLogin.jsx","OAuth/GoogleLogout.jsx","Components/HeaderFAP.jsx","OAuth/RefreshTokens.jsx","Structure/Header.jsx","Structure/Footer.jsx","cardList.js","Components/Cards.jsx","Components/Login.jsx","api/Rapi.js","Components/formAlertBox.jsx","Components/vote.png","Schemas/VoteQuestionSchema.jsx","Schemas/VoteForm.jsx","Components/Vote.jsx","Components/keyAlertBox.jsx","Components/addform.png","Schemas/QuestionSchema.jsx","Components/ListGrid.jsx","Components/Drawer.jsx","Schemas/FormSchema.jsx","Components/Form.jsx","Schemas/GraphForm.jsx","Schemas/ResponseGraph.jsx","Schemas/ResponseSchema.jsx","Components/Response.jsx","Components/App.jsx","index.js"],"names":["isLogin","api","axios","create","baseURL","apis","insertPoll","payload","post","updatePollByKey","key","put","getPollsByEmail","email","get","deletePollByKey","delete","getPolls","getPollByKey","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","duration","shortest","expandOpen","setIsLogin","LinStatus","isSignedIn","RecipeReviewCard","Status","props","history","useHistory","classes","React","useState","expanded","setExpanded","formKey","setFormKey","openAlert","setOpenAlert","checkLogin","setCheckLogin","useEffect","handleClickAlert","handleCloseAlert","event","reason","a","apiResponse","response","data","success","push","pathname","route","state","detail","buttonClick","id","enterVote","onClick","Card","className","CardHeader","title","heading","CardActions","disableSpacing","IconButton","icon","TextField","label","variant","style","position","left","value","onChange","target","keyInput","Snackbar","open","autoHideDuration","bottom","onClose","Alert","severity","clsx","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","CardContent","Typography","paragraph","description","change","Login","clientId","process","buttonText","onSuccess","onSucess","onFailure","cookiePolicy","marginTop","logout","display","alignItems","color","fontFamily","Logout","fontSize","fontWeight","onLogoutSuccess","alert","largeR","width","spacing","height","large","FAP","forwardRef","ref","result","setLink","profileObj","imageUrl","res","refreshTiming","tokenObj","expires_in","refresh","reloadAuthResponse","newAuthRes","setTimeout","refreshTokens","setState","link","setAvatarState","useImperativeHandle","slideSpeed","direction","isOpen","iconResting","Avatar","alt","src","iconActive","size","GoogleLogin","clicked","stat","nativeColor","GoogleLogout","root","backgroundColor","boxShadow","header","padding","fap","paddingTop","paddingLeft","Header","AppBar","Toolbar","Footer","currentYear","Date","getFullYear","cards","Cards","params","map","card","Rapi","Rapis","insertResponseForm","updateResponseForm","insertResponseByKey","updateResponseByKey","deleteResponseByKey","deleteResponseFormByKey","getResponses","getResponseByKey","AlertDialog","setOpen","handleClose","right","top","iconTitle","onBClick","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","VoteQuestions","rQuestions","setrQuestions","responseData","setResponseData","responseFormData","setResponseFormData","selectedRadioValue","setSelectedRadioValue","questions","formData","questionArray","forEach","question","options","optionValue","reorder","list","startIndex","endIndex","Array","from","splice","removed","createMuiTheme","typography","questionsUI","ques","i","draggableId","index","provided","snapshot","innerRef","draggableProps","dragHandleProps","Paper","elevation","marginBottom","Accordion","AccordionSummary","aria-controls","flexDirection","paddingBottom","ThemeProvider","questionText","qImageUrl","op","j","FormControlLabel","control","Radio","marginRight","checked","filter","preValue","handleRadioChange","name","inputProps","optionText","oImageUrl","Divider","Grid","container","justify","item","xs","sm","borderTop","borderRadius","paddingRight","InputProps","startAdornment","InputAdornment","margin","onDragEnd","destination","itemgg","source","droppableId","droppableProps","placeholder","float","vote","formTitle","responses","apiRes","apiInsertResponse","VoteForm","Vote","useLocation","getKey","generateKey","characters","charactersLength","length","charAt","Math","floor","random","uploadImage","img","body","FormData","set","append","method","url","QuestionsTab","setQuestions","setFormData","setKey","handleClick","imageChangeID","updateForm","prevValue","SaveFormData","creater","checkImageHereOrNotForOption","gg","undefined","updateImageLink","context","optionsOfQuestion","option","qId","expandCloseAll","qs","handleExpand","disabled","AccordionDetails","justifyContent","fullWidth","rows","rowsMax","multiline","text","questionsArr","handleQuestionValue","accept","multiple","type","files","then","handleQuestionImage","display_url","catch","error","console","log","htmlFor","component","zIndex","e","handleOptionValue","handleOptionImage","removeOption","addOption","textTransform","AccordionActions","showAsQuestion","myNewOptions","opn","opn1new","qImage","newQuestion","copyQuestion","orientation","flexItem","deleteQuestion","itemF","endIcon","addform","ListGrid","ListItem","minHeight","minWidth","readOnly","defaultValue","getFormData","newPoll","withStyles","maxWidth","palette","background","paper","overflow","maxHeight","listSection","ul","pollsList","setPollsList","List","subheader","identity","ListSubheader","createNewPoll","sectionId","Form","Drawer","responsesList","FormSchema","responseList","getResponsesList","button","questionNumber","dataArr","ResponseGraph","questionNum","arr","dataArray","setDataArray","labelArray","y","barChartData","labels","datasets","borderColor","borderWidth","startIcon","x","calculateWidth","mainAspectRatio","legend","responsive","tooltips","mode","elements","line","fill","scales","yAxes","gridLines","ticks","autoSkip","maxRotation","minRotation","xAxes","show","beginAtZero","GraphForm","toString","substring","Response","setResponseList","m","n","k","setList","ResponseSchema","App","useRef","CssBaseline","exact","path","render","current","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9ecab2dc.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TextField from '@material-ui/core/TextField';\nimport { Alert} from '@material-ui/lab'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {LinStatus} from \"../OAuth/GoogleLogin\";\nimport api from \"../api/api\"\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  expand: {\n    transform: 'rotate(0deg) scale(1.8)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg) scale(1.8)',\n  }\n}));\n\nvar isLogin ;\n\nfunction setIsLogin(){\n  isLogin = LinStatus() ? LinStatus().isSignedIn() : false;\n}\n\nfunction RecipeReviewCard(props) {\n\n  const history = useHistory();\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [formKey, setFormKey] = React.useState(\"\");\n  setIsLogin();\n  const [openAlert, setOpenAlert] = React.useState(false);\n  \n  const [checkLogin, setCheckLogin] = React.useState(false);\n\n    const handleClickLoginAlert = () => {\n        \n        setCheckLogin(true);\n      };\n\n      React.useEffect(()=>{\n    \n        setIsLogin(LinStatus() ? LinStatus().isSignedIn() : false);\n        \n      }, [])\n\n    \n    const handleCloseLoginAlert = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setCheckLogin(false);\n    };\n\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleClickAlert = () => {\n    setOpenAlert(true);\n  };\n\n  const handleCloseAlert = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenAlert(false);\n  };\n\n  async function enterVote(){\n\n    let apiResponse = null;\n    try {\n          apiResponse = await api.getPollByKey(formKey);\n            } catch (err) {\n          apiResponse = err.response;\n        } finally {\n          if(apiResponse.data.success===true){\n            history.push({\n              pathname: props.route,\n              state: { detail: apiResponse.data.data }\n            })\n          }else{\n            handleClickAlert();\n          }\n        }\n      \n  }\n\n\n  function buttonClick(){\n\n\n    if(isLogin===true){\n      if(props.id === 3){\n\n      enterVote();\n\n      }else{\n        history.push(props.route)\n      }\n    }else if(props.id === 5){\n      props.onClick();\n    }else{\n      handleClickLoginAlert();\n    }\n    \n  }\n\n\n  function Button(){\n      return(\n        <IconButton className=\"iconButton\" onClick={() => {buttonClick()}} >\n            {props.icon}\n      </IconButton>\n      \n      );\n    \n  }\n\n  function keyInput(){\n\n    if(props.id === 3)\n    return (\n      <TextField \n      id=\"outlined-basic\" \n      label=\"Enter Form Key\" \n      variant=\"outlined\" \n      style={{position:\"relative\", left:\"5%\"}}\n      value={formKey}\n      onChange={(event)=>{setFormKey(event.target.value)}}\n      />\n    )\n  }\n\n  return (\n    <Card className=\"card\">\n      <CardHeader\n        title={props.heading}\n      />\n      \n      <CardActions disableSpacing>\n\n      {Button()}\n      {keyInput()}\n\n      <Snackbar open={openAlert} autoHideDuration={6000} style={{position:\"absolute\" , bottom:\"10%\"}} onClose={handleCloseAlert}>\n       <Alert  onClose={handleCloseAlert} severity=\"warning\">\n          You entered wrong Form Identification Key! \n       </Alert>\n      </Snackbar>\n      <Snackbar open={checkLogin} autoHideDuration={6000} style={{position:\"absolute\" , bottom:\"10%\"}} onClose={handleCloseAlert}>\n         <Alert  onClose={handleCloseLoginAlert} severity=\"warning\">\n             You need to Login to your Google Account First! \n         </Alert>\n      </Snackbar>\n\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={()=>{handleExpandClick()}}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>\n          {props.description}\n          </Typography>\n          \n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\n\n\nexport default RecipeReviewCard;\nexport {setIsLogin};","import axios from 'axios'\n\nconst api = axios.create({\n    baseURL: '/api',\n})\n\nexport const insertPoll = (payload) => api.post(`/poll`, payload)\nexport const getPolls = () => api.get(`/polls`)\nexport const getPollsByEmail = (email) => api.get(`/polls/${email}`)\nexport const updatePollByKey = (key, payload) => api.put(`/poll/${key}`, payload)\nexport const deletePollByKey = (key) => api.delete(`/poll/${key}`)\nexport const getPollByKey = (key) => api.get(`/poll/${key}`)\n\nconst apis = {\n    insertPoll,\n    updatePollByKey,\n    getPollsByEmail,\n    deletePollByKey,\n    getPolls,\n    getPollByKey,\n}\n\nexport default apis","import React from \"react\";\nimport { GoogleLogin} from \"react-google-login\";\nimport { useHistory } from 'react-router-dom';\nimport {setIsLogin} from \"../Schemas/NavCardSchema\"\nimport ('dotenv'); \n\n\nvar Status;\n\nfunction LinStatus(change){\n    return Status;\n    \n}\n\nfunction Login(props){\n\n    const history = useHistory();\n\n    return (\n        <div>\n            <GoogleLogin \n                clientId={process.env.REACT_APP_GOOGLE_DRIVE_CLIENT_ID}\n                buttonText=\"Login\"\n                // render={renderProps => (\n                //        <LockIcon style={{ fontSize: 30 }} nativeColor=\"black\" />\n                //     <button\n                //         onClick={renderProps.onClick = ()=>props.clicked()}\n                //         disabled={renderProps.disabled}\n                //     >\n                //         Login with Google\n                //     </button>\n                // )}\n                \n                onSuccess={\n                    (response)=>{\n                        Status = response;\n                        props.onSucess();\n                        history.push(\"/\");\n                        setIsLogin();\n                    }\n                    }\n                onFailure={\n                    (response)=>{\n                        Status = response;\n                        props.onFailure();\n                        setIsLogin();\n                        \n                    }\n                    }\n\n                cookiePolicy={\"single_host_origin\"}\n                style={{marginTop:\"100px\"}}\n                isSignedIn={true}\n            /> \n            \n        </div>\n    )\n}\n\nexport default Login;\n\nexport {LinStatus};\n\n//props.handleLogin(response.tc.access_token)","import React from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogout} from \"react-google-login\";\nimport LockIcon from '@material-ui/icons/Lock';\nimport {setIsLogin} from \"../Schemas/NavCardSchema\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport ('dotenv'); \n\n\n\n\nvar Status ;\n\nfunction LoutStatus(){\n    return Status\n}\n\nconst useStyles = makeStyles((theme) => ({\n    logout: {\n        display: \"inline-flex\", \n        alignItems: \"center\",\n        color: \"rgba(0, 0, 0, 0.54)\",\n        fontFamily: \"Roboto, sans-serif\",\n    },\n  }));\n\nfunction Logout(props){\n\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <div>\n            <GoogleLogout\n                clientId={process.env.REACT_APP_GOOGLE_DRIVE_CLIENT_ID}\n                // render={renderProps => ( \n                //     <button\n                //         onClick={renderProps.onClick = ()=>{console.log(\"Clicked to logout\")}}\n                //         disabled={renderProps.disabled}\n                //         className={classes.logout}\n                //     >\n                //         <LockIcon style={{ fontSize: 30 }} nativeColor=\"black\" />\n\n                //         Logout\n                //     </button>\n                // )}\n                \n                icon= {false}\n                buttonText= {<div className={classes.logout}><LockIcon style={{ fontSize: 25 }} /><h2 style={{ fontSize: 14, fontWeight: \"normal\"}}>Logout</h2></div>}\n                \n                onLogoutSuccess={\n                    (response)=>{\n                        Status = response;\n                        setIsLogin();\n                        props.onSucess();\n                        history.push(\"/\");\n                        alert(\"Successfully Logged Out.\");\n                        \n                    }\n                    }\n                \n            /> \n        </div>\n    )\n}\n\nexport default Logout;\nexport {LoutStatus};\n\n\n\n","import React from \"react\";\nimport {\n    FloatingMenu,\n    MainButton,\n    ChildButton,\n  } from 'react-floating-button-menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar'\n\nimport GoogleLogin,{LinStatus} from \"../OAuth/GoogleLogin\";\nimport GoogleLogout from \"../OAuth/GoogleLogout\";\n\nimport {refreshTokens } from \"../OAuth/RefreshTokens\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    largeR: {\n      transform: \"rotate(180deg)\", \n      width: theme.spacing(7),\n      height: theme.spacing(7),\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n      },\n  }));\n\n// let avatarState;\n\n// function setAvatarState(){\n//   console.log(\"Clicked\")\n//   avatarState(!avatarState);\n// }\n\n\nconst FAP = React.forwardRef((props, ref) => {\n\n    const classes = useStyles();\n\n    function onSucess(){\n\n      var result = LinStatus() ? LinStatus() : null;\n\n      //console.log(\"Tried to set : \",LinStatus()&&LinStatus().isSignedIn() ? LinStatus().profileObj.imageUrl : null);\n\n      setLink(LinStatus()&&LinStatus().isSignedIn() ? LinStatus().profileObj.imageUrl : null);\n\n\n       //console.log(result);\n\n      if(result)\n      refreshTokens(result);\n  }\n\n\n    \n\n  function onFailure(result){\n\n    //console.log(\" [Login Failure] response: \",result)\n}\n\n    const [state , setState] = React.useState(false);\n    const [link , setLink] = React.useState(LinStatus()&&LinStatus().profileObj ? LinStatus().profileObj.imageUrl : null);\n\n    //var link = LinStatus()&&LinStatus().isSignedIn() ? LinStatus().profileObj.imageUrl : null;\n\n    const setAvatarState = () => {\n      setState(!state);\n    };\n  \n    React.useImperativeHandle(ref, () => {\n      return {\n        setAvatarState: setAvatarState\n      };\n    });\n\n    return (\n        <FloatingMenu\n          slideSpeed={500}\n          direction=\"down\"\n          spacing={8}\n          isOpen={state}\n        >\n          <MainButton\n            iconResting={<Avatar alt=\"Remy Sharp\" src={link} className={classes.large} />}\n            iconActive={<Avatar alt=\"Remy Sharp\" src={link} className={classes.largeR} />}\n            onClick={() => (\n              setState(!state)\n              )}\n            size={56}\n          />\n           <ChildButton\n            icon={<GoogleLogin \n            onSucess = {onSucess}\n            onFailure = {onFailure}\n            clicked = \"true\" \n            stat = \"false\" style={{ fontSize: 30 }} \n            nativeColor=\"black\" \n\n            />}\n            //onClick={() => console.log('First button clicked')}\n          />\n          <ChildButton\n            icon={<GoogleLogout \n            style={{ fontSize: 30 }} \n            nativeColor=\"black\" \n            onSucess = {onSucess}\n\n            />}\n            size={50}\n          />\n        </FloatingMenu>\n    )\n})\n\n\nexport default FAP;\n","export const refreshTokens = (res) => {\n\n    let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n\n    const refresh = async () => {\n        const newAuthRes = await res.reloadAuthResponse();\n        refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n\n        //console.log(\"newAuthRes :\",newAuthRes);\n\n        //console.log(\"new token: \", newAuthRes.id_token);\n\n        setTimeout(refresh, refreshTiming)\n\n    }\n\n    setTimeout(refresh, refreshTiming)\n}\n\n\n","import React from 'react';\nimport FAP from \"../Components/HeaderFAP\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {  makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        backgroundColor: \"#9154d8\",\n        boxShadow: \"0 0 10px 0 rgba(0, 0, 0, 0.3)\",\n      },\n\n    header: {\n        backgroundColor: \"#9154d8\",\n        padding: \"1% 1% 1% 1%\", \n        boxShadow: \"0 0 10px 0 rgba(0, 0, 0, 0.3)\",\n        height: \"10.3%\",\n        position: \"inline\",\n    },\n  \n  title: {\n    fontWeight: \"bold\",\n    fontSize: \"28px\"\n  },\n\n  fap: {\n\n    paddingTop: \"5.8%\",\n    paddingLeft: \"83%\",\n\n  }\n}));\n\nconst Header= React.forwardRef((props, ref)=>{\n    const classes = useStyles();\n\n    return (\n        <div >\n        <AppBar className={classes.header}>\n        <Toolbar position=\"static\" className={classes.root} >\n          <h1 className={classes.title} variant=\"h6\">\n            Polling Web App\n          </h1>\n          <div className={classes.fap}><FAP ref={ref} /></div>\n        </Toolbar>\n        \n      </AppBar>\n        </div>\n        \n    );\n})\n\n\nexport default Header;","import React from 'react';\n\n\n\nfunction Footer(){\n    const currentYear = new Date().getFullYear();\n    return (\n    <footer>\n        <p>Copyright by Abhijeet Wankhade ⓒ{currentYear}</p>\n    </footer>\n    );\n}\n\n\nexport default Footer;","import CreateIcon from '@material-ui/icons/Create';\nimport VoteIcon from '@material-ui/icons/HowToVote';\nimport ResponseIcon from '@material-ui/icons/Forum';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\n\nconst cards= [\n    {\n        id: 2,\n        heading: \"Create Poll\",\n        description: \"Create a polling form.\",\n        icon: <CreateIcon />,\n        route: \"/Form\"\n    },\n    {\n        id: 3,\n        heading: \"Vote\",\n        description: \"Vote too already existing poll.\",\n        icon: <VoteIcon/>,\n        route: \"/Vote\"\n    },\n    {\n        id: 4,\n        heading: \"View Responses\",\n        description: \"View Responses to the polls created by you.\",\n        icon: <ResponseIcon/>,\n        route: \"/Response\"\n    },{\n        id: 5,\n        heading: \"Login\",\n        description: \"Login to create new polls or to submit a response.\",\n        icon: <ExitToAppIcon/>,\n        route: \"/\"\n    }\n]\n\n\nexport default cards;","import React from \"react\";\nimport cards from \"../cardList\";\nimport NavCard from \"../Schemas/NavCardSchema\";\n\nfunction Cards(params) {\n    return (\n        <div style={{paddingTop: \"9%\", paddingLeft: \"7%\"}}>\n            <div className=\"mainCard\" >\n                    {cards.map(card => <NavCard \n\n                    key = {card.id}\n                    id = {card.id}\n                    heading = {card.heading} \n                    description = {card.description}\n                    icon = {card.icon}\n                    route = {card.route}\n                    onClick = {params.onClick}\n\n                    />)}\n            </div>\n        </div>\n    );\n}\n\nexport default Cards;","import React from \"react\";\n\nfunction Login(params) {\n    return <h1> Login Here</h1>\n}\n\nexport default Login;","import axios from 'axios'\n\nconst Rapi = axios.create({\n    baseURL: '/Rapi',\n})\n\nexport const insertResponseForm = (payload) => Rapi.post(`/responseform`, payload)\nexport const updateResponseForm = (key,payload) => Rapi.put(`/responseform/${key}`, payload)\nexport const getResponses = (key) => Rapi.get(`/responses/${key}`)\nexport const insertResponseByKey = (key,payload) => Rapi.put(`/responseIn/${key}`, payload)\nexport const updateResponseByKey = (key, email, payload) => Rapi.put(`/responseUp/${key}/${email}`, payload)\nexport const deleteResponseByKey = (key, email) => Rapi.delete(`/response/${key}/${email}`)\nexport const deleteResponseFormByKey = (key) => Rapi.delete(`/responseform/${key}`)\nexport const getResponseByKey = (key, email) => Rapi.get(`/response/${key}/${email}`)\n\nconst Rapis = {\n    insertResponseForm,\n    updateResponseForm,\n    insertResponseByKey,\n    updateResponseByKey,\n    deleteResponseByKey,\n    deleteResponseFormByKey,\n    getResponses,\n    getResponseByKey,\n}\n\nexport default Rapis","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\n\n\n\nfunction AlertDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button \n      style={{position:\"fixed\", right:\"20%\", top:\"20%\"}} \n      variant=\"outlined\" \n      color=\"primary\" \n      title={props.iconTitle} \n      onClick={\n          async ()=>{\n            props.onBClick();\n            handleClickOpen()\n              }\n           }\n      >\n        <img style={{height:\"5rem\"}} src={props.icon} alt=\"addform.png\"></img>\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.description}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={()=>{handleClose()}} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={\n              ()=>{\n                handleClose();\n                props.onClick();\n                }\n              } \n              color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default AlertDialog;","export default __webpack_public_path__ + \"static/media/vote.bd580c9f.png\";","import React from 'react'\nimport {Grid} from '@material-ui/core';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport { Paper, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Divider from '@material-ui/core/Divider';\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Alert from '@material-ui/lab/Alert';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport api from \"../api/Rapi\";\nimport SaveAlert from \"../Components/formAlertBox\";\nimport {LinStatus} from \"../OAuth/GoogleLogin\"\nimport vote from \"../Components/vote.png\";\nimport KeyIcon from '@material-ui/icons/VpnKey';\n\n\nfunction VoteQuestions(props) {\n\n  const [rQuestions, setrQuestions]= React.useState([]);\n  const [responseData, setResponseData] = React.useState({});\n  const [responseFormData, setResponseFormData] = React.useState({});\n  const [open, setOpen] = React.useState(false);\n  const [selectedRadioValue, setSelectedRadioValue] = React.useState([]);\n\n  const questions = props.formData.questions;\n  const formData = props.formData;\n\n\n  function handleRadioChange(event,i,j){\n    //console.log(\"bkj\",event);\n    rQuestions[i].options.filter(value=>{ return value.optionValue===true}).forEach(value=>{value.optionValue = false}) ;\n    \n    rQuestions[i].options[j].optionValue = true;\n    setSelectedRadioValue((preValue)=>{\n      preValue[i] = j;\n      return [\n        ...preValue\n      ]\n    });\n    \n  };\n\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  \n\n  React.useEffect(()=>{\n\n    var questionArray = props.formData.questions;\n    questionArray.forEach(question=>{question.options.forEach(value=>{value.optionValue = false})}); \n    setrQuestions(questionArray);\n    \n  }, [props.formData,rQuestions])\n\n\n  function SaveResponse(){\n\n    //console.log(LinStatus().profileObj.name);\n    setResponseData(\n      {\n        name: LinStatus().profileObj.name,\n        email: LinStatus().profileObj.email,\n        questions: [...rQuestions],\n      }\n    )\n\n    setResponseFormData(\n      {\n        formKey: props.formData.key,\n        formTitle: props.formData.title,\n        responses: [\n          {\n            name: LinStatus().profileObj.name,\n            email: LinStatus().profileObj.email,\n            questions: [...rQuestions],\n          }\n        ]\n      }\n    )\n    \n  }    \n\n\n function onDragEnd(result) {\n  if (!result.destination) {\n    return;\n  }\n  var itemgg = [...questions];\n\n  // eslint-disable-next-line\n  const itemF = reorder(\n    itemgg,\n    result.source.index,\n    result.destination.index\n  );\n\n  //setQuestions(itemF);\n  }\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n\n  const theme = createMuiTheme({\n    typography: {\n      fontSize: 18,\n    },\n  });\n\n  function questionsUI(){\n\n    return  questions.map((ques, i)=> (\n      <Draggable key={i} draggableId={i + 'id'} index={i}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    >\n                    \n                      <div>\n                      <Paper elevation={3} style={{width:'100%'}}>\n          <div style={{marginBottom: \"15px\"}}>\n            <div style={{width:'100%', marginBottom: '-7px' }}>\n              <DragIndicatorIcon style={{transform: \"rotate(-90deg)\", color:'#DAE0E2'}} fontSize=\"small\"/>\n            </div>\n          \n            <Accordion expanded={questions[i].open}>\n              <AccordionSummary            \n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n                elevation={3} style={{width:'100%'}}\n              >\n                \n              <div style={{display: 'flex',flexDirection:'column', alignItems:'flex-start', marginLeft: '3px', paddingTop: '15px', paddingBottom: '15px'}}>\n                {/* <TextField id=\"standard-basic\" label=\" \" value=\"Question\" InputProps={{ disableUnderline: true }} />  */}\n                \n                <ThemeProvider theme={theme}>\n                <Typography variant=\"subtitle1\" style={{marginLeft: '0px'}}>\n                {i+1}.  {ques.questionText || \"Question Text\"}\n                </Typography>\n                </ThemeProvider>\n\n                {ques.qImageUrl !==\"\"?(\n                  <div>\n                    <img src={ques.qImageUrl} width=\"400px\" height=\"auto\" alt=\"Question\" /><br></br><br></br>\n                  </div>\n                ): \"\" }\n                \n                {ques.options.map((op, j)=>(\n                 \n                 <div key={j}>\n                   <div style={{display: 'flex'}}>\n                    <FormControlLabel control=\n                    {\n                    <Radio \n                      style={{marginRight: '3px', }} \n                      checked={selectedRadioValue[i] === j}\n                      onChange={(event)=>{handleRadioChange(event,i,j)}}\n                      value={j}\n                      name=\"radio-button-demo\"\n                      inputProps={{ 'aria-label': 'A' }}\n                    />\n                    } label={\n                        <Typography style={{color: '#555555'}}>\n                          {ques.options[j].optionText || \"Option Text\"}\n                        </Typography>\n                      } />\n                   </div>\n\n                  <div>\n                    {op.oImageUrl !==\"\"?(\n                      <img src={op.oImageUrl} width=\"240px\" height=\"auto\" alt=\"Option\" />\n                    ): \"\" }\n                  </div>\n                 </div>\n                ))}  \n              </div>            \n               \n              </AccordionSummary>\n\n              <Divider />\n              \n            </Accordion>\n            </div>\n            </Paper>\n          \n      </div>\n                    </div>\n                  )}\n      </Draggable>\n      \n     )\n    )\n  }\n\n\n  return (\n       <div style={{marginTop:'15px', marginBottom: '7px', paddingBottom:\"30px\", display:\"flex\"}}>\n           <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            \n            >\n              \n             <Grid item xs={12} sm={5} style={{width: '100%'}}>\n                 \n                  <Grid style={{borderTop: '10px solid teal', borderRadius: 10}}>\n                      <div >\n                          <div>\n                            <Paper elevation={3} style={{width:'100%'}}>\n                              <div style={{display: 'flex',flexDirection:'column', alignItems:'flex-start', marginLeft: '15px', paddingTop: '20px', paddingBottom: '20px'}}>\n                                \n                                <div style={{display:\"flex\"}}>\n                                \n                                   <TextField \n                                      id=\"filled-basic\" \n                                      label=\"Label\" \n                                      name= \"title\"\n                                      style={{width: \"90%\", paddingRight: \"7%\"}}\n                                      //onChange= {updateForm}\n                                      InputProps={{style: {fontSize: \"2rem\",fontWeight: \"bold\",fontFamily:'Montserrat'}}}\n                                      variant=\"outlined\" \n                                      value={formData.title || \"\"}\n\n                                   />\n                                   <div >\n                                        \n                                        <TextField\n                                          id=\"input-with-icon-textfield\"\n                                          label=\"Form Key\"\n                                          style={{paddingRight:\"10%\"}}\n                                          value={formData.key}\n                                          InputProps={\n                                            {\n                                            style: {fontSize: \"2rem\",fontFamily:'Montserrat'},\n                                            \n                                            startAdornment: (\n                                              <InputAdornment position=\"start\">\n\n                                                <Button variant=\"outlined\" color=\"primary\">\n                                                  <KeyIcon />\n                                                </Button>\n\n                                              </InputAdornment>\n                                            ),\n                                          }}\n                                          variant=\"outlined\" \n                                        />\n                                      \n                                   </div>\n                                \n                                </div>\n                                \n                                \n                                <TextField\n                                  id=\"filled-full-width\"\n                                  label=\"description\"\n                                  name=\"description\"\n                                  value={formData.description || \"\"}\n                                  InputProps={{style: {fontFamily:'Montserrat'}}}\n                                  style={{ margin: 8 , width: \"90%\"}}\n                                  \n                                />\n                              </div>\n                            </Paper>\n                          </div> \n                      </div>       \n                  </Grid>  \n\n                  <Grid style={{paddingTop: '10px'}}>\n                    <div>\n\n                    <DragDropContext onDragEnd={onDragEnd}>\n                      <Droppable droppableId=\"droppable\">\n                        {(provided, snapshot) => (\n                        \n                          <div\n                            {...provided.droppableProps}\n                            ref={provided.innerRef}\n                          >\n                          \n                            {questionsUI()}\n\n                            {provided.placeholder}\n                          </div>\n                        )}\n                      </Droppable>\n                    </DragDropContext>\n                    <div style={{float:\"right\"}}>    \n                        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                              <Alert onClose={handleClose} severity=\"warning\">\n                                   Some of Form Fields are still Empty! \n                              </Alert>\n                        </Snackbar>\n\n                    </div>\n\n                    {/* <div>\n                        <Button\n                        onClick={ async ()=>{\n                          formData.questions = questions\n                          //SaveResponse()\n                          //console.log(rQuestions)\n                          //console.log(responseData)\n                          await api.getResponses().then(res => {\n                          //console.log(res)\n                          })\n                          }}>\n                        Print formdata\n                        </Button>\n                    </div> */}\n\n                    </div>\n                  </Grid>        \n              </Grid>           \n           </Grid>\n           \n           <SaveAlert \n            title = \"Agree only if you want to submit this poll.\"\n            description = \"Clicking Agree will submit your response to each question.\"\n            icon = {vote}\n            iconTitle = \"Submit Poll\"\n              onBClick={()=>{SaveResponse()}}\n            onClick={ async() => {\n                let apiRes = null;\n              try {\n                    //console.log(\"ABHI\",responseData.formKey);\n                    apiRes = await api.getResponseByKey(responseFormData.formKey, responseData.email);\n                      } catch (err) {\n                    apiRes = err.response;\n                  } finally {\n                      //console.log(apiRes);\n                      if(apiRes.data.success===false){\n                        \n                        let apiResponse = null;\n                      try {\n                        //console.log(\"false\");\n                        apiResponse = await api.insertResponseForm(responseFormData);\n                          } catch (err) {\n                            apiResponse = err.response;\n                          } finally {\n                            //console.log(apiResponse)\n                            if(apiResponse.data.success===true){\n                               alert(\"Response Submitted Successfully\");\n                              }\n                            }\n                        \n                      }else{\n\n                        let apiResponse = null;\n                      try {\n                        //console.log(\"true\");\n                        apiResponse = await api.updateResponseByKey(responseFormData.formKey, responseData.email, responseData);\n                          } catch (err) {\n                            apiResponse = err.response;\n                          } finally {\n                            //console.log(apiResponse)\n                            if(apiResponse.data.success===true){\n                               alert(\"Response Updated Successfully\");\n                              }else{\n                                let apiInsertResponse = null;\n                                try {\n                                  //console.log(\"update false\");\n                                  apiInsertResponse = await api.insertResponseByKey(responseFormData.formKey, responseData);\n                                } catch (err) {\n                                  apiInsertResponse = err.response;\n                                } finally {\n                                  //console.log(apiInsertResponse)\n                                  if(apiInsertResponse.data.success===true){\n                                       alert(\"Response Submitted Successfully\");\n                                  }\n                            }\n                              }\n                            }\n                      }\n                  }\n                }}\n           />\n       </div>\n  );\n}\nexport default VoteQuestions;\n\n\n /*\n async() => {\n                let apiResponse = null;\n              try {\n                    apiRes = await api.insertPoll(formData);\n                      } catch (err) {\n                    apiRes = err.response;\n                  } finally {\n                      if(apiResponse.data.success===true){\n                        alert(\"Poll Created Successfully\");\n                      }\n                  }\n                }\n */","import React from \"react\";\nimport VoteQuestion from \"./VoteQuestionSchema\";\n\n\nfunction VoteForm(props){\n\n  return(\n\n    \n    \n    <VoteQuestion formData={props.formData}/>\n  );\n\n}\n\nexport default VoteForm;\n\n","import React from \"react\";\nimport VoteForm from \"../Schemas/VoteForm\";\nimport { useLocation } from \"react-router-dom\";\n\n\nfunction Vote(props) {\n\n  const location = useLocation();\n  var formData = location.state.detail;\n\n  formData.questions.forEach((question)=>{return question.open=false});\n\n  //console.log(formData);\n\n\n    return (\n      <div style={{paddingTop: \"6%\"}}>\n\n        <VoteForm \n          formData =  {formData}\n        />\n      </div>\n    )\n}\n\nexport default Vote;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport KeyIcon from '@material-ui/icons/VpnKey';\n\nvar formKey = \"\";\n\nfunction getKey(){\n  if(formKey === \"\"){\n    generateKey();\n  }\n    return formKey;\n}\n\nfunction generateKey() {\n\n  //console.log(\"Clicked\");\n  var result           = '';\n  var characters       = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for ( var i = 0; i < 7; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  \n  formKey= result;\n}\n\nfunction AlertDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={()=>{handleClickOpen()}}>\n      <KeyIcon />\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Changing Form Key?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Form key is an unique identification of your form, changing it would result in permenant change in your form's identity.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={()=>{handleClose()}} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={\n              ()=>{\n                handleClose();\n                generateKey(7);\n                props.onClick();\n                }\n              } \n              color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default AlertDialog;\nexport {getKey};","export default __webpack_public_path__ + \"static/media/addform.9b6f32c1.png\";","import React from 'react'\nimport {Grid} from '@material-ui/core';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport { Paper, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Radio from '@material-ui/core/Radio';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport Divider from '@material-ui/core/Divider';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Alert from '@material-ui/lab/Alert';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport api from \"../api/api\";\nimport AlertBox,{getKey} from \"../Components/keyAlertBox\";\nimport SaveAlert from \"../Components/formAlertBox\";\nimport {LinStatus} from \"../OAuth/GoogleLogin\"\nimport addform from \"../Components/addform.png\";\n\n\nfunction uploadImage(img){\n  let body = new FormData()\n  body.set(\"key\",\"a30bb713e75e4383f0cff1b4f7bc72b2\")\n  body.append(\"image\", img)\n\n  return axios({\n    method: 'post',\n    url: 'http://api.imgbb.com/1/upload',\n    data: body,\n  })\n}\n\n\nfunction QuestionsTab(props) {\n\n  const [questions, setQuestions]= React.useState([]);\n  const [formData, setFormData] = React.useState({});\n  const [open, setOpen] = React.useState(false);\n  const [key , setKey] = React.useState(\"\");\n  const [selectedRadioValue, setSelectedRadioValue] = React.useState([0]);\n\n\n  function handleRadioChange(event,i,j){\n    questions[i].options.filter(value=>{ return value.optionValue===true}).forEach(value=>{value.optionValue = false}) ;\n    \n    questions[i].options[j].optionValue = true;\n    setSelectedRadioValue((preValue)=>{\n      preValue[i] = j;\n      return [\n        ...preValue\n      ]\n    });\n    \n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  \n  var imageChangeID = null;\n\n  React.useEffect(()=>{\n    \n    if(props.formData.questions !== undefined){\n      if(props.formData.questions.length === 0){\n        setQuestions([{questionText: \"\", qId: 0, qImageUrl: \"\", options : [{optionText: \"\", optionValue: true, oImageUrl: \"\"}], open: true}]);\n      } else{\n        setQuestions(props.formData.questions)\n      }\n      //setLoadingFormData(false)\n    } \n    setFormData(props.formData)\n    setKey(props.formData.key)\n    \n  }, [props.formData])\n\n  function updateForm(event){\n    const { name, value } = event.target;\n\n    setFormData(prevValue => {\n      return {\n        ...prevValue, \n        [name]: value\n      };\n    });\n  }\n\n  function SaveFormData(formKey){\n\n    //console.log(LinStatus().profileObj.name);\n    setFormData(\n      {\n        creater: LinStatus().profileObj.name,\n        email: LinStatus().profileObj.email,\n        title: formData.title,\n        description: formData.description,\n        key: formKey,\n        questions: questions,\n      }\n    )\n    \n  }    \n\n\n\n  function checkImageHereOrNotForQuestion(gg){\n    if ((gg === undefined)||(gg===\"\")){\n      return false;\n    } else{\n      return true;\n    }\n  }\n\n  function checkImageHereOrNotForOption(gg){\n   // console.log(gg);\n    if ((gg === undefined)||(gg===\"\")){\n      return false;\n    } else{\n      return true;\n    }\n  }\n\n  function addMoreQuestionField(){\n    //console.log(questions[questions.length-1].questionText);\n\n    if( questions[questions.length-1].questionText !== \"\"){\n\n      expandCloseAll(); \n\n      setQuestions(questions=> [...questions, {questionText: \"\", qId: questions.length ,qImageUrl: \"\", options : [{optionText: \"\", optionValue: true, oImageUrl: \"\"}], open: true}]);\n\n    }else{\n      handleClick();\n    }\n      \n  }\n\n  function copyQuestion(i){\n    let qs = [...questions]; \n    expandCloseAll();\n    const myNewOptions = [];\n    qs[i].options.forEach(opn => {\n      if ((opn.oImageUrl !== undefined)||(opn.oImageUrl !==\"\")) {\n        var opn1new = {\n          optionText : opn.optionText,\n          optionValue: opn.optionValue,\n          oImageUrl: opn.oImageUrl\n        }\n      } else{\n        opn1new = {\n          optionText : opn.optionText,\n          optionValue: opn.optionValue,\n        }\n      }\n      myNewOptions.push(opn1new)\n    });\n    const qImage = qs[i].qImageUrl || \"\";\n    var newQuestion = {questionText: qs[i].questionText, qId: questions.length , qImageUrl : qImage ,options:myNewOptions, open: true}\n     setQuestions(questions=> [...questions, newQuestion]); \n  }\n\n\n  function updateImageLink(link, context){\n    \n    var optionsOfQuestion = [...questions];\n    var i = context.question\n\n    if (context.option == null) {\n      optionsOfQuestion[i].qImageUrl= link;\n    } else {\n      var j = context.option\n      optionsOfQuestion[i].options[j].oImageUrl = link;\n    }\n    setQuestions(optionsOfQuestion);\n  }\n\n  function deleteQuestion(i){\n    let qs = [...questions]; \n    if(questions.length > 1){\n      qs.splice(i, 1);\n    }\n    setQuestions(qs)\n  }\n\n  \n\n  function handleOptionValue(text,i, j){\n    var questionsArr = [...questions];\n    questionsArr[i].options[j].optionText = text;\n    //newMembersEmail[i]= email;\n      setQuestions(questionsArr);\n  }\n\n  function handleQuestionValue(text, i){\n    var questionsArr = [...questions];\n    questionsArr[i].questionText = text;\n      setQuestions(questionsArr);\n  }\n\n  function handleQuestionImage(url, i){\n    var questionsArr = [...questions];\n    questionsArr[i].qImageUrl = url;\n      setQuestions(questionsArr);\n  }\n\n  function handleOptionImage(url,i, j){\n    var questionsArr = [...questions];\n    questionsArr[i].options[j].oImageUrl = url;\n    //newMembersEmail[i]= email;\n      setQuestions(questionsArr);\n  }\n\n function onDragEnd(result) {\n  if (!result.destination) {\n    return;\n  }\n  var itemgg = [...questions];\n\n  itemgg[result.source.index].qId = result.destination.index;\n  itemgg[result.destination.index].qId = result.source.index;\n\n  var itemF = reorder(\n    itemgg,\n    result.source.index,\n    result.destination.index\n  );\n\n  //console.log(itemF);\n\n  \n\n  setQuestions(itemF);\n  }\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    \n    return result;\n  };\n\n  function showAsQuestion(i){\n    let qs = [...questions];  \n     qs[i].open = false;\n     setQuestions(qs);\n  }\n\n  function addOption(i){\n\n    var optionsOfQuestion = [...questions];\n\n    if(optionsOfQuestion[i].options[optionsOfQuestion[i].options.length-1].optionText !== \"\"){\n      if(optionsOfQuestion[i].options.length < 30){\n      optionsOfQuestion[i].options.push({optionText: \"\", oImageUrl: \"\"})\n      } else{\n        //console.log(\"Max  5 options \");  \n      }\n      //console.log(optionsOfQuestion);\n      setQuestions(optionsOfQuestion)\n    }else{\n      handleClick();\n    }\n    \n  }\n\n  function removeOption(i, j){\n    var optionsOfQuestion = [...questions];\n    if(optionsOfQuestion[i].options.length > 1){\n      optionsOfQuestion[i].options.splice(j, 1);\n      setQuestions(optionsOfQuestion)\n      //console.log(i + \"__\" + j);\n    }   \n  }\n\n  function expandCloseAll(){\n    let qs = [...questions]; \n     for (let j = 0; j < qs.length; j++) {  \n      qs[j].open = false;\n     }\n     setQuestions(qs);\n  }\n\n  function handleExpand(i){\n    let qs = [...questions]; \n    for (let j = 0; j < qs.length; j++) {\n      if(i ===j ){\n        qs[i].open = true;\n \n      } else{\n        qs[j].open = false;\n       }\n    }\n     setQuestions(qs);\n  }\n\n  const theme = createMuiTheme({\n    typography: {\n      fontSize: 18,\n    },\n  });\n\n  function questionsUI(){\n\n    return  questions.map((ques, i)=> (\n      <Draggable key={i} draggableId={i + 'id'} index={i}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    >\n                    \n                      <div>\n                      <Paper elevation={3} style={{width:'100%'}}>\n          <div style={{marginBottom: \"15px\"}}>\n            <div style={{width:'100%', marginBottom: '-7px' }}>\n              <DragIndicatorIcon style={{transform: \"rotate(-90deg)\", color:'#DAE0E2'}} fontSize=\"small\"/>\n            </div>\n          \n            <Accordion onChange={()=>{handleExpand(i)}} expanded={questions[i].open}>\n              <AccordionSummary            \n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n                elevation={3} style={{width:'100%'}}\n              >\n                { !questions[i].open ? (\n              <div style={{display: 'flex',flexDirection:'column', alignItems:'flex-start', marginLeft: '3px', paddingTop: '15px', paddingBottom: '15px'}}>\n                {/* <TextField id=\"standard-basic\" label=\" \" value=\"Question\" InputProps={{ disableUnderline: true }} />  */}\n                \n                <ThemeProvider theme={theme}>\n                <Typography variant=\"subtitle1\" style={{marginLeft: '0px'}}>\n                {i+1}.  {ques.questionText || \"Question Text\"}\n                </Typography>\n                </ThemeProvider>\n\n                {ques.qImageUrl !==\"\"?(\n                  <div>\n                    <img src={ques.qImageUrl} width=\"400px\" height=\"auto\" alt=\"Question\" /><br></br><br></br>\n                  </div>\n                ): \"\" }\n                \n                {ques.options.map((op, j)=>(\n                 \n                 <div key={j}>\n                   <div style={{display: 'flex'}}>\n                    <FormControlLabel disabled control=\n                    {\n                    <Radio \n                      style={{marginRight: '3px', }} \n                      checked={questions[i].options[j].optionValue}\n                      name=\"radio-button-demo\"\n                      inputProps={{ 'aria-label': 'A' }}\n                    />\n                    } label={\n                        <Typography style={{color: '#555555'}}>\n                          {ques.options[j].optionText || \"Option Text\"}\n                        </Typography>\n                      } />\n                   </div>\n\n                  <div>\n                    {op.oImageUrl !==\"\"?(\n                      <img src={op.oImageUrl} width=\"240px\" height=\"auto\" alt=\"Option\" />\n                    ): \"\" }\n                  </div>\n                 </div>\n                ))}  \n              </div>            \n              ): \"\"}   \n              </AccordionSummary>\n\n              <AccordionDetails>\n              <div style={{display: 'flex',flexDirection:'column', alignItems:'flex-start', marginLeft: '15px', marginTop:'-15px'}}>\n                <div style={{display:'flex', width: '100%', justifyContent: 'space-between'}}>\n                  <Typography style={{marginTop:'20px'}}>{i+1}.</Typography>\n                  <TextField \n                        fullWidth={true} \n                        placeholder=\"Question Text\" \n                        style={{marginBottom: '18px'}}  \n                        rows={2}\n                        rowsMax={20}\n                        multiline={true}\n\n                        value={ques.questionText}\n                        variant=\"outlined\"\n                      onChange={(event)=>{handleQuestionValue(event.target.value, i)}}\n                  />\n                   \n                   <input\n                      accept=\"image/*\"\n                      style={{ display: 'none' }}\n                      id=\"question-button-file\"\n                      name={i}\n                      multiple\n                      type=\"file\"\n                      onChange={\n                                  (event)=>{\n                                    uploadImage(event.target.files[0]).then(\n                                      (response)=>{\n                                        handleQuestionImage(response.data.data.display_url, imageChangeID.i)\n                                         \n                                  }\n                                      ).catch(\n                                        (error)=>console.log(error)\n                                        );\n                                      \n                                    }\n                              }\n                        \n                    />\n                    <label htmlFor=\"question-button-file\" >\n                      <Button variant=\"text\" component=\"span\"  onClick={\n                        // eslint-disable-next-line\n                        ()=>{\n                          imageChangeID={i}\n                        }\n                        }>\n                      <AddPhotoAlternateIcon />\n                      </Button>\n                    </label> \n\n                </div>\n\n                <div>\n                     {\n                       checkImageHereOrNotForQuestion(ques.qImageUrl) ? (\n                        <div>\n                            <div style={{width:'150px', display: 'flex', alignItems:'flex-start', paddingLeft:'20px'}}>\n                            <img src={ques.qImageUrl} width=\"150px\" height=\"auto\" alt=\"Question\"/>\n                            <IconButton style={{marginLeft: '-15px', marginTop: '-15px',zIndex:999, backgroundColor: 'lightgrey', color:'grey'}} \n                                        size=\"small\"\n                                        onClick={()=>{\n                                          updateImageLink(\"\", {question: i, option: null})\n                                        }}>\n                              <CloseIcon />\n                            </IconButton>\n                            </div>\n                        </div>\n                       ): \"\"\n                     }\n                </div>\n                \n                <div style={{width: '100%'}}>\n                {ques.options.map((op, j)=>(\n                 \n                 <div key={j}>\n                      <div  style={{display:'flex', flexDirection:'row', marginLeft:'-12.5px', justifyContent: 'space-between', paddingTop: '5px', paddingBottom: '5px'}}>\n\n                          <Radio \n                              checked={selectedRadioValue[i] === j}\n                              onChange={(event)=>{handleRadioChange(event,i,j)}}\n                              value={j}\n                              name=\"radio-button-demo\"\n                              inputProps={{ 'aria-label': 'A' }}\n                          /> \n                          <TextField \n                            fullWidth={true} \n                            placeholder=\"Option text\" \n                            style={{marginTop: '5px'}} \n                            value={ques.options[j].optionText}\n                            onChange={(e)=>{handleOptionValue(e.target.value, i, j)}}\n                          />\n\n                          <input\n                            accept=\"image/*\"\n                            style={{ display: 'none' }}\n                            id=\"option-button-file\"\n                            multiple\n                            type=\"file\"\n                            onChange={\n                                        (event)=>{\n\n                                          uploadImage(event.target.files[0]).then(\n                                            (response)=>{\n                                              handleOptionImage(response.data.data.display_url, imageChangeID.i, imageChangeID.j)\n                                              console.log(questions)\n                                              }\n                                            ).catch(\n                                              (error)=>console.log(error)\n                                              );\n                                          \n                                          }\n                                      }\n                          />\n                          <label htmlFor=\"option-button-file\" >\n                            <Button variant=\"text\" component=\"span\" onClick={\n                              // eslint-disable-next-line\n                              \n                              ()=>{\n                                imageChangeID={i,j}\n                                uploadImage(i, j)\n                                }\n                              }>\n                            <AddPhotoAlternateIcon />\n                            </Button>\n                          </label> \n\n                          <IconButton aria-label=\"delete\" onClick={()=>{removeOption(i, j)}}>\n                            <CloseIcon />\n                          </IconButton>\n                          </div>\n\n                          <div>\n                          {\n                            checkImageHereOrNotForOption(op.oImageUrl) ? (\n                            <div>\n                              <div style={{width:'150px', display: 'flex', alignItems:'flex-start', paddingLeft:'20px'}}>\n                                <img src={op.oImageUrl} width=\"90px\" height=\"auto\" alt=\"Option\"/>\n                                \n                                <IconButton style={{marginLeft: '-15px', marginTop: '-15px',zIndex:999, backgroundColor: 'lightgrey', color:'grey'}}\n                                            size=\"small\"\n                                            onClick={()=>{\n                                              updateImageLink(\"\", {question: i, option: j})\n                                            }}\n                                            >\n                                  <CloseIcon />\n                                </IconButton>\n                              </div>\n                              <br></br>\n                              <br></br>  \n                            </div>\n                            ): \"\"\n                          }\n                          </div>\n                 </div>\n                ))}  \n                </div>  \n                \n                \n                {ques.options.length < 30 ? (\n                  <div>\n                  <FormControlLabel disabled control={<Radio />} label={\n                    <Button size=\"small\" onClick={()=>{addOption(i)}} style={{textTransform: 'none', marginLeft:\"-5px\"}}>\n                      Add Option\n                    </Button>\n                  } /> \n                  </div>\n                ): \"\"}\n\n                <br></br>\n                <br></br>\n\n                <Typography variant=\"body2\" style={{color: 'grey'}}>Maximum 30 Options can be added. If you want to add more options in a question then buy our premium subscription.</Typography>\n              </div>\n              </AccordionDetails>\n\n              <Divider />\n              \n              <AccordionActions>               \n                    <IconButton aria-label=\"View\" title=\"View\" onClick={()=>{showAsQuestion(i)}}>\n                      <VisibilityIcon />\n                    </IconButton>\n\n                    <IconButton aria-label=\"Copy\" title=\"Copy\" onClick={()=>{copyQuestion(i)}}>\n                      <FilterNoneIcon />\n                    </IconButton>\n                    <Divider orientation=\"vertical\" flexItem/>\n\n                    <IconButton aria-label=\"delete\" title=\"Delete\" onClick={()=>{deleteQuestion(i)}}>\n                      <DeleteOutlineIcon />\n                    </IconButton>\n\n                    <IconButton aria-label=\"Image\" title=\"Paste\" >\n                      <MoreVertIcon />\n                    </IconButton>\n              </AccordionActions>\n            </Accordion>\n            </div>\n            </Paper>\n          \n      </div>\n                    </div>\n                  )}\n      </Draggable>\n      \n     )\n    )\n  }\n\n\n  return (\n    <div style={{marginTop:'15px', marginBottom: '7px', paddingBottom:\"30px\", display:\"flex\"}}>\n\n        <Grid\n         container\n         direction=\"column\"\n         justify=\"center\"\n         alignItems=\"center\"\n\n         >\n\n      <Grid item xs={12} sm={5} style={{width: '100%'}}>        \n      \n       <Grid style={{borderTop: '10px solid teal', borderRadius: 10}}>\n           <div >\n               <div>\n                 <Paper elevation={3} style={{width:'100%'}}>\n                   <div style={{display: 'flex',flexDirection:'column', alignItems:'flex-start', marginLeft: '15px', paddingTop: '20px', paddingBottom: '20px'}}>\n                     \n                     <div style={{display:\"flex\"}}>\n                     \n                        <TextField \n                           id=\"filled-basic\" \n                           label=\"Label\" \n                           name= \"title\"\n                           style={{width: \"90%\", paddingRight: \"7%\"}}\n                           onChange= {updateForm}\n                           InputProps={{style: {fontSize: \"2rem\",fontWeight: \"bold\",fontFamily:'Montserrat'}}}\n                           variant=\"outlined\" \n                           value={formData.title || \"\"}\n\n                        />\n                        <div >\n                             \n                             <TextField\n                               id=\"input-with-icon-textfield\"\n                               label=\"Form Key\"\n                               style={{paddingRight:\"10%\"}}\n                               value={key}\n                               InputProps={\n                                 {\n                                 style: {fontSize: \"2rem\",fontFamily:'Montserrat'},\n                                 \n                                 startAdornment: (\n                                   <InputAdornment position=\"start\">\n\n                                     <AlertBox \n                                       onClick={()=>{\n                                         if(getKey()!==\"\"){\n                                       formData.key = getKey();\n                                       setKey(getKey());\n                                       }}\n                                       }\n                                     />\n                                   </InputAdornment>\n                                 ),\n                               }}\n                               variant=\"outlined\" \n                             />\n                           \n                        </div>\n                     \n                     </div>\n                     \n                     \n                     <TextField\n                       id=\"filled-full-width\"\n                       label=\"description\"\n                       name=\"description\"\n                       onChange= {updateForm}\n                       value={formData.description || \"\"}\n                       InputProps={{style: {fontFamily:'Montserrat'}}}\n                       style={{ margin: 8 , width: \"90%\"}}\n                       \n                     />\n                   </div>\n                 </Paper>\n               </div> \n           </div>       \n       </Grid>  \n\n       <Grid style={{paddingTop: '10px'}}>\n         <div>\n\n         <DragDropContext onDragEnd={onDragEnd}>\n           <Droppable droppableId=\"droppable\">\n             {(provided, snapshot) => (\n             \n               <div\n                 {...provided.droppableProps}\n                 ref={provided.innerRef}\n               >\n               \n                 {questionsUI()}\n\n                 {provided.placeholder}\n               </div>\n             )}\n           </Droppable>\n         </DragDropContext>\n         <div style={{float:\"right\"}}>                       \n             <Button\n               variant=\"contained\"\n               onClick={()=>{addMoreQuestionField()}}\n               endIcon={<AddCircleIcon />}\n               style={{margin: '5px'}}\n             >Add Question </Button>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                   <Alert onClose={handleClose} severity=\"warning\">\n                        Some of Form Fields are still Empty! \n                   </Alert>\n             </Snackbar>\n\n         </div>\n\n         <div>\n             <Button\n             onClick={ async ()=>{\n               formData.questions = questions\n               //console.log(formData)\n               await api.getPolls().then(res => {\n               //console.log(res)\n               })\n               }}>\n             Print formdata\n             </Button>\n         </div>\n\n         </div>\n       </Grid>        \n   </Grid>           \n        </Grid>\n\n        <SaveAlert \n         title = \"Agree only if you know your Form key..\"\n         description = \"Clicking Agree will save this poll. Anyone can access it using Form Key .\"\n         icon = {addform}\n         iconTitle = \"Save Form\"\n         onBClick={()=>{\n           if(formData.key === \"\")\n           {var formKey=getKey();setKey(formKey);SaveFormData(formKey)}\n           else{\n            SaveFormData(formData.key)\n           }}}\n         onClick={ async() => {\n             let apiRes = null;\n           try {\n                 apiRes = await api.getPollByKey(key);\n                   } catch (err) {\n                 apiRes = err.response;\n               } finally {\n                   //console.log(apiRes);\n                   if(apiRes.data.success===false){\n                     \n                     let apiResponse = null;\n                   try {\n                     apiResponse = await api.insertPoll(formData);\n                       } catch (err) {\n                         apiResponse = err.response;\n                       } finally {\n                         //console.log(apiResponse)\n                         if(apiResponse.data.success===true){\n                            alert(\"Poll Created Successfully\");\n                           }\n                         }\n                       \n                   }else{\n\n                     let apiResponse = null;\n                   try {\n                     apiResponse = await api.updatePollByKey(key, formData);\n                       } catch (err) {\n                         apiResponse = err.response;\n                       } finally {\n                         //console.log(apiResponse)\n                         if(apiResponse.data.success===true){\n                            alert(\"Poll Updated Successfully\");\n                           }\n                         }\n                   }\n               }\n             }}\n            />\n    </div>\n\n      \n\n    \n       \n  );\n}\nexport default QuestionsTab\n\n\n /*\n async() => {\n                let apiResponse = null;\n              try {\n                    apiRes = await api.insertPoll(formData);\n                      } catch (err) {\n                    apiRes = err.response;\n                  } finally {\n                      if(apiResponse.data.success===true){\n                        alert(\"Poll Created Successfully\");\n                      }\n                  }\n                }\n */\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport {Grid} from '@material-ui/core';\n\nimport { Paper} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nexport default function ListGrid(props) {\n    return (\n        <div>\n            <ListItem >\n                <Button style={{\n                    width:\"100%\",\n                    display: 'inline-block',\n                    padding:0,\n                    minHeight: 0,\n                    minWidth: 0,\n                }} \n                onClick = {props.onClick}\n                >\n                    <Grid style={{borderTop: '10px', borderRadius: 10, width:\"100%\"}}>\n                        <div >\n                            <div>\n                              <Paper elevation={3} style={{width:'100%'}}>\n                                <div style={{display: 'flex',flexDirection:'column', alignItems:'flex-start', marginLeft: '15px', paddingTop: '20px', paddingBottom: '20px'}}>\n\n                                  <div >\n\n                                     <TextField \n                                        label=\"Label\" \n                                        name= \"title\"\n                                        style={{width: \"100%\", paddingRight: \"7%\", paddingBottom:\"10%\"}}\n                                        InputProps={{\n                                            readOnly: true,\n                                            style: {fontSize: \"1.4rem\",fontWeight: \"bold\",fontFamily:'Montserrat'}}}\n                                        variant=\"outlined\" \n                                        defaultValue={props.label || \"\"}\n\n                                     />\n                                     <div >\n                             \n                                          <TextField\n                                            label=\"Form Key\"\n                                            style={{width: \"50%\", paddingBottom:\"5%\"}}\n                                            value={props.formKey || \"\"}\n                                            InputProps={\n                                              {\n                                                readOnly: true,\n                                              style: {fontSize: \"1.2rem\",fontWeight: \"bold\",fontFamily:'Montserrat'},\n\n                                            }}\n                                            variant=\"outlined\" \n                                          />\n\n                                     </div>\n                                        \n                                  </div>\n                                        \n                                        \n                                  <TextField\n                                    label=\"description\"\n                                    name=\"description\"\n                                    value={props.description || \"\"}\n                                    InputProps={{style: {fontFamily:'Montserrat'}}}\n                                    style={{ margin: 8 , width: \"90%\"}}\n                                        \n                                  />\n                                </div>\n                              </Paper>\n                            </div> \n                        </div>       \n                    </Grid>\n                </Button>\n            </ListItem>\n            \n        </div>\n    )\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListGrid from \"./ListGrid\";\nimport api from \"../api/api\";\nimport {LinStatus} from \"../OAuth/GoogleLogin\";\n\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    position: 'absolute',\n    top: \"15%\",\n    overflow: \"auto\",\n    maxHeight: \"85%\",\n    boxShadow: \"0 0 10px 0 rgba(0, 0, 0, 0.3)\",\n  },\n  listSection: {\n    backgroundColor: 'inherit',\n  },\n  ul: {\n    backgroundColor: 'inherit',\n    padding: 0,\n  },\n});\n\nvar formData = null;\n\nfunction getFormData(){\n  return formData;\n}\n\nconst newPoll = {\n  key: \"\", \n  title: \"Form Title\", \n  description: \"Form Description\",\n  questions: [\n    {\n      questionText: \"Question\",\n      qId: 0,\n       qImageUrl: \"\",\n        options : [\n          {\n            optionText: \"Option\",\n            optionValue: true,\n             oImageUrl: \"\"\n          }\n        ],\n      open: true,\n    }\n  ]\n}\n\n\nfunction PinnedSubheaderList(props) {\n  const { classes } = props;\n  const [pollsList, setPollsList] = React.useState([]);\n\n  React.useEffect(()=>{\n\n    setTimeout(\n      async()=>{\n        let apiResponse = null;\n      try {\n            apiResponse = await api.getPollsByEmail(LinStatus().profileObj.email);\n              } catch (err) {\n                apiResponse = err.response;\n          } finally {\n              if(apiResponse.data.success===true){\n                setPollsList(\n                  [\n                    ...apiResponse.data.data\n                  ]\n                  );\n              }else{\n                setPollsList();\n              }\n          }\n      \n        },\n      2000\n    )\n    \n  }, [])\n\n\n  function createNewPoll(){\n    if(props.identity === \"createPoll\"){\n      return <div>\n        <li key={`section`} className={classes.listSection}>\n          <ul className={classes.ul}>\n            <ListSubheader>{\"Create New Poll\"}</ListSubheader>\n            <div>\n            <ListGrid \n              key = {newPoll.key}\n              label = {newPoll.title}\n              formKey = {newPoll.key}\n              description = {newPoll.description}\n              onClick = {\n                ()=>{\n                  formData = newPoll\n                  props.onClick()\n                  }\n                }\n              />\n            </div>\n          </ul>\n        </li>\n      </div>\n    }\n  }\n\n  return (\n    <List className={classes.root} subheader={<li />}>\n\n    {createNewPoll()}\n      \n      {[0].map(sectionId => (\n        <li key={`section-${sectionId}`} className={classes.listSection}>\n          <ul className={classes.ul}>\n            <ListSubheader>{\"Your Polls\"}</ListSubheader>\n            {pollsList ? pollsList.map(item => (\n              <ListGrid \n              key = {item.key}\n              label = {item.title}\n              formKey = {item.key}\n              description = {item.description}\n              onClick = {\n                ()=>{\n                  formData = item\n                  props.onClick()\n                  }\n                }\n              />\n            )) : null}\n          </ul>\n        </li>\n      ))}\n\n    </List>\n  );\n}\n\nPinnedSubheaderList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PinnedSubheaderList);\nexport {getFormData} ;\n\n\n/*\n{\n    \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132ce\"),\n    \"creater\" : \"WANKHADE ABHIJEET ARVIND\",\n    \"email\" : \"cs19b1028@iiitr.ac.in\",\n    \"title\" : \"fcghvjbscnkdlm\",\n    \"description\" : \"efsdczdcfgtf\",\n    \"key\" : \"BohBPvd\",\n    \"questions\" : [ \n        {\n            \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132cf\"),\n            \"questionText\" : \"wdsczxfrrdvx \",\n            \"qId\" : 0,\n            \"qImageUrl\" : \"https://i.ibb.co/GxJ3GnM/Screenshot-from-2020-10-29-11-45-46.png\",\n            \"options\" : [ \n                {\n                    \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132d0\"),\n                    \"optionText\" : \"Ans\",\n                    \"optionValue\" : false,\n                    \"oImageUrl\" : \"https://i.ibb.co/GxJ3GnM/Screenshot-from-2020-10-29-11-45-46.png\"\n                }, \n                {\n                    \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132d1\"),\n                    \"optionText\" : \"arwefsdvcx\",\n                    \"oImageUrl\" : \"\",\n                    \"optionValue\" : true\n                }\n            ],\n            \"open\" : false\n        }, \n        {\n            \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132d2\"),\n            \"questionText\" : \"wdsczxfrrdvx \",\n            \"qId\" : 1,\n            \"qImageUrl\" : \"https://i.ibb.co/GxJ3GnM/Screenshot-from-2020-10-29-11-45-46.png\",\n            \"options\" : [ \n                {\n                    \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132d3\"),\n                    \"optionText\" : \"Ans\",\n                    \"optionValue\" : false,\n                    \"oImageUrl\" : \"https://i.ibb.co/GxJ3GnM/Screenshot-from-2020-10-29-11-45-46.png\"\n                }, \n                {\n                    \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132d4\"),\n                    \"optionText\" : \"arwefsdvcx\",\n                    \"optionValue\" : true,\n                    \"oImageUrl\" : \"\"\n                }\n            ],\n            \"open\" : false\n        }, \n        {\n            \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132d5\"),\n            \"questionText\" : \"wdsczxfrrdvx \",\n            \"qId\" : 2,\n            \"qImageUrl\" : \"https://i.ibb.co/GxJ3GnM/Screenshot-from-2020-10-29-11-45-46.png\",\n            \"options\" : [ \n                {\n                    \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132d6\"),\n                    \"optionText\" : \"Ans\",\n                    \"optionValue\" : false,\n                    \"oImageUrl\" : \"https://i.ibb.co/GxJ3GnM/Screenshot-from-2020-10-29-11-45-46.png\"\n                }, \n                {\n                    \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132d7\"),\n                    \"optionText\" : \"arwefsdvcx\",\n                    \"optionValue\" : true,\n                    \"oImageUrl\" : \"\"\n                }\n            ],\n            \"open\" : false\n        }, \n        {\n            \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132d8\"),\n            \"questionText\" : \"wdsczxfrrdvx \",\n            \"qId\" : 3,\n            \"qImageUrl\" : \"https://i.ibb.co/GxJ3GnM/Screenshot-from-2020-10-29-11-45-46.png\",\n            \"options\" : [ \n                {\n                    \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132d9\"),\n                    \"optionText\" : \"Ans\",\n                    \"optionValue\" : false,\n                    \"oImageUrl\" : \"https://i.ibb.co/GxJ3GnM/Screenshot-from-2020-10-29-11-45-46.png\"\n                }, \n                {\n                    \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132da\"),\n                    \"optionText\" : \"arwefsdvcx\",\n                    \"optionValue\" : true,\n                    \"oImageUrl\" : \"\"\n                }\n            ],\n            \"open\" : false\n        }, \n        {\n            \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132db\"),\n            \"questionText\" : \"wdsczxfrrdvx \",\n            \"qId\" : 4,\n            \"qImageUrl\" : \"https://i.ibb.co/GxJ3GnM/Screenshot-from-2020-10-29-11-45-46.png\",\n            \"options\" : [ \n                {\n                    \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132dc\"),\n                    \"optionText\" : \"Ans\",\n                    \"optionValue\" : false,\n                    \"oImageUrl\" : \"https://i.ibb.co/GxJ3GnM/Screenshot-from-2020-10-29-11-45-46.png\"\n                }, \n                {\n                    \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132dd\"),\n                    \"optionText\" : \"arwefsdvcx\",\n                    \"optionValue\" : true,\n                    \"oImageUrl\" : \"\"\n                }\n            ],\n            \"open\" : false\n        }, \n        {\n            \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132de\"),\n            \"questionText\" : \"wdsczxfrrdvx \",\n            \"qId\" : 5,\n            \"qImageUrl\" : \"https://i.ibb.co/GxJ3GnM/Screenshot-from-2020-10-29-11-45-46.png\",\n            \"options\" : [ \n                {\n                    \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132df\"),\n                    \"optionText\" : \"Ans\",\n                    \"optionValue\" : false,\n                    \"oImageUrl\" : \"https://i.ibb.co/GxJ3GnM/Screenshot-from-2020-10-29-11-45-46.png\"\n                }, \n                {\n                    \"_id\" : ObjectId(\"5fffaf4a3c2b153177c132e0\"),\n                    \"optionText\" : \"arwefsdvcx\",\n                    \"optionValue\" : true,\n                    \"oImageUrl\" : \"\"\n                }\n            ],\n            \"open\" : true\n        }\n    ],\n    \"__v\" : 0\n}\n*/","import React from \"react\";\nimport Question from \"./QuestionSchema\";\nimport Drawer,{getFormData} from \"../Components/Drawer\";\n\n\nfunction Form(){\n\n  const identity = \"createPoll\";\n\n  const [formData, setFormData] = React.useState({\n    key: \"\", \n    title: \"Form Title\", \n    description: \"Form Description\",\n    questions: [\n      {\n        questionText: \"Question\",\n        qId: 0,\n         qImageUrl: \"\",\n          options : [\n            {\n              optionText: \"Option\",\n              optionValue: true,\n               oImageUrl: \"\"\n            }\n          ],\n        open: true,\n      }\n    ]\n  });\n\n  return(\n    <div >\n      \n      <Question formData={formData}/>\n\n      <Drawer\n      identity = {identity}\n        onClick = {()=>{\n          setFormData(getFormData())\n          }}\n      />\n    </div>\n  );\n\n}\n\nexport default Form;\n\n","import React from \"react\";\nimport FormSchema from \"../Schemas/FormSchema\"\n\nfunction Form(params) {\n    return (\n        <div style={{paddingTop: \"6%\"}}>\n            <FormSchema />\n        </div>\n    \n    )\n}\n\nexport default Form;","import React from 'react'\nimport {Grid} from '@material-ui/core';\nimport Graph from \"./ResponseGraph\";\nimport Rapi from \"../api/Rapi\";\n\nimport { Paper, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Divider from '@material-ui/core/Divider';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport KeyIcon from '@material-ui/icons/VpnKey';\n\nvar responsesList;\n\nfunction getResponsesList(){\n  return responsesList;\n}\n\nasync function setResponseList(key){\n  \n    let apiResponse = null;\n  try {\n        apiResponse = await Rapi.getResponses(key);\n          } catch (err) {\n            apiResponse = err.response;\n      } finally {\n          if(apiResponse.data.success===true){\n            \n            responsesList = [\n                ...apiResponse.data.data\n              ]\n              \n          }else{\n            responsesList = null\n          }\n      }\n  \n}\n\nfunction GraphForm(props) {\n\n  var formData = props.formData;\n\n    const theme = createMuiTheme({\n        typography: {\n          fontSize: 18,\n        },\n      });\n\n  return (\n       <div style={{marginTop:'15px', marginBottom: '7px', paddingBottom:\"30px\", display:\"flex\"}}>\n           <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            \n            >\n              \n             <Grid item xs={12} sm={5} style={{width: '100%'}}>\n                 \n                  <Grid style={{borderTop: '10px solid teal', borderRadius: 10}}>\n                      <div >\n                          <div>\n                            <Paper elevation={3} style={{width:'100%'}}>\n                              <div style={{display: 'flex',flexDirection:'column', alignItems:'flex-start', marginLeft: '15px', paddingTop: '20px', paddingBottom: '20px'}}>\n                                \n                                <div style={{display:\"flex\"}}>\n\n                                \n                                   <TextField \n                                      id=\"filled-basic\" \n                                      label=\"Label\" \n                                      name= \"title\"\n                                      style={{width: \"90%\", paddingRight: \"7%\"}}\n                                      //onChange= {updateForm}\n                                      InputProps={{style: {fontSize: \"2rem\",fontWeight: \"bold\",fontFamily:'Montserrat'}}}\n                                      variant=\"outlined\" \n                                      value={formData.title || \"\"}\n\n                                   />\n                                   <div >\n                                        \n                                        <TextField\n                                          id=\"input-with-icon-textfield\"\n                                          label=\"Form Key\"\n                                          style={{paddingRight:\"10%\"}}\n                                          value={formData.key || \"\"}\n                                          InputProps={\n                                            {\n                                            style: {fontSize: \"2rem\",fontFamily:'Montserrat'},\n                                            \n                                            startAdornment: (\n                                              <InputAdornment position=\"start\">\n\n                                                <Button variant=\"outlined\" color=\"primary\">\n                                                  <KeyIcon />\n                                                </Button>\n\n                                              </InputAdornment>\n                                            ),\n                                          }}\n                                          variant=\"outlined\" \n                                        />\n                                      \n                                   </div>\n                                \n                                </div>\n                                \n                                \n                                <TextField\n                                  id=\"filled-full-width\"\n                                  label=\"description\"\n                                  name=\"description\"\n                                  value={formData.description || \"\"}\n                                  InputProps={{style: {fontFamily:'Montserrat'}}}\n                                  style={{ margin: 8 , width: \"90%\"}}\n                                  \n                                />\n                              </div>\n                            </Paper>\n                          </div> \n                      </div>       \n                  </Grid>  \n\n                  {\n                      formData.questions.map((question,i)=>(\n                        <Grid \n                        key = {Math.random().toString(36).substring(7)}\n                        style={{paddingTop: '10px', width:'100%'}}>\n                            <Paper elevation={3} style={{padding:\"3% 3% 3% 3%\"}}>\n                            \n                            <Accordion >\n                                <AccordionSummary\n                                  elevation={3} style={{width:'100%'}}\n                                >\n\n                                <div style={{display: 'flex',flexDirection:'column', alignItems:'flex-start', marginLeft: '3px', paddingTop: '15px', paddingBottom: '15px'}}>\n                                  \n                                  <ThemeProvider theme={theme}>\n                                  <Typography variant=\"subtitle1\" style={{marginLeft: '0px'}}>\n                                  {i+1}.  {question.questionText || \"Question Text\"}\n                                  </Typography>\n                                  </ThemeProvider>\n\n                                  {question.qImageUrl !==\"\"?(\n                                    <div>\n                                      <img src={question.qImageUrl} width=\"400px\" height=\"auto\" alt=\"Question\" /><br></br><br></br>\n                                    </div>\n                                  ): \"\" }\n\n                                  <ThemeProvider theme={theme}>\n                                    <Typography variant=\"subtitle1\" style={{marginLeft: '0px'}}>\n                                      {\"Responses : \"}\n                                    </Typography>\n                                  </ThemeProvider>\n\n                                  <Graph\n                                    key = {i}\n                                    options = {question.options}\n                                    responseList = {responsesList}\n                                    questionNum = {i}\n                                />\n                \n                                  {question.options.map((op, j)=>(\n                 \n                                   <div key={j}>\n                                     <div style={{display: 'flex'}}>\n                                      <FormControlLabel control=\n                                      {\n                                      <Radio \n                                        style={{marginRight: '3px', }} \n                                        checked = {question.options[j].optionValue}\n                                        inputProps={{ 'aria-label': 'A' }}\n                                      />\n                                      } label={\n                                          <Typography style={{color: '#555555'}}>\n                                            {question.options[j].optionText || \"Option Text\"}\n                                          </Typography>\n                                        } />\n                                     </div>\n\n                                    <div>\n                                      {op.oImageUrl !==\"\"?(\n                                        <img src={op.oImageUrl} width=\"240px\" height=\"auto\" alt=\"Option\" />\n                                      ): \"\" }\n                                    </div>\n                                   </div>\n                                  ))}  \n                                </div>            \n               \n                                </AccordionSummary>\n\n                                <Divider />\n              \n                              </Accordion>\n                            </Paper>\n                        </Grid>\n                      ))\n                  }\n                  \n\n                  <Grid style={{paddingTop: '10px'}}>\n                    {/* <div>\n\n                    <div>\n                        <Button\n                        onClick={ ()=>{console.log(responsesList ,Math.round(7/8))}}>\n                        Print formdata\n                        </Button>\n                    </div>\n\n                    </div> */}\n                  </Grid>        \n              </Grid>           \n           </Grid>\n           \n       </div>\n  );\n}\nexport default GraphForm;\nexport {setResponseList, getResponsesList};\n\n\n /*\n async() => {\n                let apiResponse = null;\n              try {\n                    apiRes = await api.insertPoll(formData);\n                      } catch (err) {\n                    apiRes = err.response;\n                  } finally {\n                      if(apiResponse.data.success===true){\n                        alert(\"Poll Created Successfully\");\n                      }\n                  }\n                }\n */","import React from 'react';\nimport { HorizontalBar} from 'react-chartjsx';\nimport Button from '@material-ui/core/Button';\nimport {getResponsesList} from \"./GraphForm\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nvar responseList = getResponsesList() ? getResponsesList() : [];\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nvar data = [\n  {\n    questionNumber : 0,\n    dataArr : []\n  }\n];\n\nfunction setList(){\n  responseList = getResponsesList() ? getResponsesList() : [];\n\n  data = [\n    {\n      questionNumber : 0,\n      dataArr : []\n    }\n  ];\n\n  if(responseList.length!==0){\n    console.log(\"HELlo\",responseList)\n  \n    for(var x = 1; x < responseList[0].questions.length; x++) {\n      data.push({\n        questionNumber : x,\n        dataArr : []\n      });\n    }\n  \n    for(var m=0; m<responseList[0].questions.length; m++){\n      for(var n=0; n<responseList[0].questions[m].options.length; n++){\n          data[m].dataArr.push(0);\n      }\n    }\n\n    for(var i=0; i<responseList.length; i++){\n      for(var j=0; j<responseList[i].questions.length; j++){\n        for(var k=0; k<responseList[i].questions[j].options.length; k++){\n          if(responseList[i].questions[j].options[k].optionValue === true){\n            \n            data[j].dataArr[k]=data[j].dataArr[k] + 1;\n            break;\n          }\n      }\n      }\n  }\n    \n  }\n\n}\n\n\nexport default function ResponseGraph(props) {\n\n  var questionNum = props.questionNum;\n  var arr = new Array(props.options.length);\n  for(var i =0; i<props.options.length; i++){arr[i] =0}\n  const [dataArray, setDataArray] = React.useState([...arr]);\n  const classes = useStyles();\n\n\n  var labelArray = [];\n  for(var y=1; y<=props.options.length; y++ ){\n    labelArray.push(\"Option \"+y)\n  }\n\n  var barChartData = { \n    labels: labelArray,\n    datasets: [ \n      { \n        label: \"Number of Responses\", \n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 1,\n        data: dataArray,\n      } \n    ] \n  }\n\n  const options = {\n    mainAspectRatio: false,\n    \n    legend: {\n        display: false\n    },\n    responsive: false,\n    tooltips: {\n        mode: 'label'\n    },\n    elements: {\n        line: {\n            fill: false\n        }\n    },\n    scales: {\n        yAxes: [\n            {\n                //barThickness: 'flex',\n                display: true,\n                \n                gridLines: {\n                    display: false\n                },\n                ticks: {\n                    autoSkip: false,\n                    maxRotation: 10,\n                    minRotation: 10\n                }\n            }\n        ],\n        xAxes: [\n            {\n                type: 'linear',\n                display: true,\n                position: 'left',\n                id: 'x-axis-1',\n                gridLines: {\n                    display: true\n                },\n                labels: {\n                    show: false\n                },\n                ticks: {\n                    beginAtZero: true\n                }\n            }\n        ]\n    }\n};\n\n\nfunction calculateWidth() {\n  const  x  = props.options\n  let length = x ? x.length : 0\n  switch (true) {\n      case length >= 0 && length <= 3:\n          return 400\n      case length >= 4 && length <= 50:\n          return 1200\n      case length >= 51 && length <= 100:\n          return 2000\n      default:\n          return 5000\n  }\n}\n\n    return (\n        <div  style={{marginTop:'15px', marginBottom: '7px', paddingLeft:\"25%\"}}>\n            \n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              className={classes.button}\n              startIcon={<RefreshIcon />}\n              onClick={()=>{\n              var arr = data[questionNum].dataArr;\n              setDataArray(arr);\n              }}\n            >\n              Refresh Graph\n            </Button>\n\n            <HorizontalBar \n            width={400}\n            height={calculateWidth()}\n            data={barChartData} \n            options={options} \n                />\n            \n        </div>\n    )\n}\n\nexport {setList};","import React from \"react\";\nimport Drawer,{getFormData} from \"../Components/Drawer\";\nimport GraphForm from \"./GraphForm\";\nimport {setResponseList} from \"./GraphForm\";\nimport {setList} from \"./ResponseGraph\";\n\nfunction Response(){\n\n  const identity = \"\";\n\n  const [formData, setFormData] = React.useState({\n    key: \"\", \n    title: \"Form Title\", \n    description: \"Form Description\",\n    questions: [\n      {\n        questionText: \"Question\",\n        qId: 0,\n         qImageUrl: \"\",\n          options : [\n            {\n              optionText: \"Option\",\n              optionValue: true,\n               oImageUrl: \"\"\n            }\n          ],\n        open: true,\n      }\n    ]\n  });\n\n  return(\n    <div >\n      \n        <GraphForm formData={formData}/>\n      <Drawer\n        identity = {identity}\n        onClick = {()=>{\n          setFormData(getFormData())\n          setResponseList(getFormData().key).then(()=>{setList()})\n          }}\n      />\n    </div>\n  );\n\n}\n\nexport default Response;\n\n","import React from \"react\";\nimport ResponseSchema from \"../Schemas/ResponseSchema\"\n\nfunction Response(params) {\n    return (\n        <div style={{paddingTop: \"6%\"}}>\n            <ResponseSchema />\n        </div>\n    \n    )\n}\n\nexport default Response;","import React from 'react';\nimport Header from \"../Structure/Header.jsx\";\nimport Footer from \"../Structure/Footer.jsx\";\nimport Cards from \"./Cards\";\nimport { Switch, Route} from 'react-router-dom';\nimport Login from \"./Login\";\nimport Vote from \"./Vote\";\nimport Form from \"./Form\";\nimport Response from \"./Response\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nfunction App(){\n\n    const ref = React.useRef(null);\n    \n    return (\n        <div>\n            <CssBaseline />\n            <Header ref={ref}/>\n            \n                <Switch>\n            \n                    <Route exact path='/' render={props => (<Cards \n                        onClick = {()=>{ref.current.setAvatarState()}}\n                    />)}/>\n                    <Route path='/Login' component={Login} />\n                    <Route path='/Vote' render={props => (<Vote />)}\n                    />\n                    <Route path='/Form' render={props => (<Form />)} \n                    />\n                    <Route path='/Response' render={props => (<Response />)} \n                    />\n\n                </Switch>\n            <Footer />\n            \n        </div>\n    );\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./Components/App\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}